name: Lint and Format

on:
  workflow_dispatch:

  pull_request:
    branches:
      - main
      - dev

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  CARGO_PROFILE_DEV_DEBUG: 0
  RUST_BACKTRACE: 1

jobs:
  typescript:
    name: TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 8.x.x

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19
          cache: "pnpm"

      - name: Install pnpm dependencies
        run: pnpm i --frozen-lockfile

      - name: Perform typechecks
        run: pnpm typecheck

  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 8.x.x

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install pnpm dependencies
        run: pnpm i --frozen-lockfile

      - name: Perform linting
        run: pnpm lint

  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt

      - name: Cache Rust dependencies
        uses: ./.github/actions/cache-rust-deps

      - name: Generate Prisma client
        uses: ./.github/actions/generate-prisma-client

      - name: Run rustfmt
        run: cargo fmt --all -- --check

  clippy_check:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: clippy

      - name: Cache Rust dependencies
        uses: ./.github/actions/cache-rust-deps

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 8
          run_install: false

      - name: Run 'setup-system.sh' script
        run: ./.github/scripts/setup-system.sh

      - name: Generate Prisma client
        uses: ./.github/actions/generate-prisma-client

      - name: Run Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --release
